version: '3'
services:
    web:
        image: nginx:alpine
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./etc/ssl:/etc/ssl"
            - "./app:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
        ports:
            - "8000:80"
            - "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/sh -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - db
    php:
        build:
            dockerfile: ./etc/php/Dockerfile
#        image: php
        restart: always
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./app:/var/www/html"
        environment:
            - MYSQL_HOST=${MYSQL_HOST}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    redis:
        image: redis:latest
        restart: always
        ports:
            - "6379:6379"
        command: '--requirepass password'
        volumes:
            - ./d–∞ta:/root/redis
            - ./etc/redis/redis.conf:/usr/local/etc/redis/redis.conf
        environment:
            - REDIS_PASSWORD=password
            - REDIS_HOST_PASSWORD=password
            - REDIS_PORT=6379
            - REDIS_DATABASES=16
    composer:
        image: "composer"
        volumes:
            - "./app:/app"
        command: install
    db:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: example
    adminner:
        image: adminer
        restart: always
        ports:
            - 8080:8080
